#! /bin/bash

# A git subcommand to cherry-pick a commit onto a stable branch
#
# Executes cherry-pick, but also edits the commit message to add
# a [BRANCH] prefix on the first line, and a "Backport of ..."
# line at the message's end.
#
# Usage:
# Put this file somewhere on your path and make it executable.
# Then, when you want to backport a fix from master:
#
# $ git djcp $commit
#

BRANCH_NAME=`git branch | sed -n '/\* stable\//s///p'`
echo $BRANCH_NAME

git reset --hard

REV=$1
: ${ORIGBRANCH=master}

TMPFILE=tmplog.tmp

# Cherry-pick the other commit
git cherry-pick ${REV}

# Create new log message by modifying the old one
git log --pretty=format:"[${BRANCH_NAME}] %s%n%n%b%nBackport of ${REV} from master" HEAD^..HEAD \
        | grep -v '^BP$' > ${TMPFILE}

# Commit new log message
git commit --amend -F ${TMPFILE}

# Clean up temporary files
rm -f ${TMPFILE}
